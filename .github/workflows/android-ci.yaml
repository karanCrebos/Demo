name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build Android Test APK
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload test apk t browserStack
        run: |
          curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X POST "https://api-cloud.browserstack.com/app-automate/espresso/v2/build" \
          -F "app=@app/build/outputs/apk/debug/app-debug.apk" \
          -F "tests=@app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk" \
          -F "devices=Google Pixel 7-12.0" \
          -F "deviceLogs=true" \
          -F "networkLogs=true"

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

#      - name: Upload to Firebase App Distribution
#        env:
#          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase.json
#        run: |
#          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase.json
#          firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
#            --app 1:162093106925:android:088dfebbbdfb1d9de22ee4 \
#            --release-notes "New build from GitHub Actions" \
#            --groups 'internal-testers'

      - name: Fetch Firebase Testers
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase.json
          FIREBASE_SERVICE_ACCOUNT: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          FIREBASE_TESTERS: ${{ secrets.FIREBASE_TESTERS }}
        run: |
          echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase.json
          
          # Check if FIREBASE_TESTERS secret is set
          if [ -z "$FIREBASE_TESTERS" ]; then
            echo "⚠️  FIREBASE_TESTERS secret not found. Using default group 'internal-testers'"
            echo "TESTERS=internal-testers" >> $GITHUB_ENV
          else
            echo "✅ FIREBASE_TESTERS found, using dynamic fetch"
            ./fetch-firebase-testers.sh
          fi

      - name: Upload to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase.json
        run: |
          # Check if TESTERS is a group or email list
          if [[ "$TESTERS" == *"@"* ]]; then
            echo "📧 Distributing to specific testers: $TESTERS"
            firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
              --app 1:162093106925:android:088dfebbbdfb1d9de22ee4 \
              --release-notes "New build from GitHub Actions" \
              --testers "$TESTERS"
          else
            echo "👥 Distributing to group: $TESTERS"
            firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
              --app 1:162093106925:android:088dfebbbdfb1d9de22ee4 \
              --release-notes "New build from GitHub Actions" \
              --groups "$TESTERS"
          fi

      - name: Cleanup
        run: rm -f service-account-key.json