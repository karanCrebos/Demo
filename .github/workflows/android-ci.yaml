name: Android CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      # Helpful if you want to reuse them
      APP_APK_PATH: app/build/outputs/apk/debug/app-debug.apk
      TEST_APK_PATH: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Build AndroidTest APK
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload App APK to BrowserStack
        id: upload-app
        run: |
          echo "üì± Uploading App APK to BrowserStack..."
          RESPONSE=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
            -X POST "https://api-cloud.browserstack.com/app-automate/upload" \
            -F "file=@${{ env.APP_APK_PATH }}")

          echo "Response: $RESPONSE"
          APP_ID=$(echo $RESPONSE | grep -o '"app_url":"[^"]*"' | cut -d'"' -f4)
          if [ -z "$APP_ID" ]; then
            echo "‚ùå Failed to get app_id from response"
            exit 1
          fi
          echo "‚úÖ App uploaded: $APP_ID"
          echo "app_id=$APP_ID" >> $GITHUB_OUTPUT

      - name: Upload Test APK to BrowserStack
        id: upload-test
        run: |
          echo "üß™ Uploading Test APK to BrowserStack..."
          RESPONSE=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
            -X POST "https://api-cloud.browserstack.com/app-automate/espresso/test-suite" \
            -F "file=@${{ env.TEST_APK_PATH }}")

          echo "Response: $RESPONSE"
          TEST_ID=$(echo $RESPONSE | grep -o '"test_url":"[^"]*"' | cut -d'"' -f4)
          if [ -z "$TEST_ID" ]; then
            echo "‚ùå Failed to get test_id from response"
            exit 1
          fi
          echo "‚úÖ Test APK uploaded: $TEST_ID"
          echo "test_id=$TEST_ID" >> $GITHUB_OUTPUT

             - name: Trigger Espresso tests on BrowserStack
         run: |
           echo "üöÄ Triggering Espresso tests on BrowserStack..."
           RESPONSE=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
             -X POST "https://api-cloud.browserstack.com/app-automate/espresso/v2/build" \
             -H "Content-Type: application/json" \
             -d '{
               "app": "${{ steps.upload-app.outputs.app_id }}",
               "testSuite": "${{ steps.upload-test.outputs.test_id }}",
               "devices": ["Samsung Galaxy S24 Ultra-14.0"],
               "deviceLogs": true,
               "networkLogs": true,
               "projectName": "TestingDemo",
               "buildName": "GitHub Actions Build"
             }')

           echo "Response: $RESPONSE"

      - name: Upload APK as Artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: ${{ env.APP_APK_PATH }}

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Setup Firebase Service Account
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT }}' > firebase.json

      - name: Upload to Firebase App Distribution
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/firebase.json
          FIREBASE_TESTERS: ${{ secrets.FIREBASE_TESTERS }}
        run: |
          TESTERS=${{ secrets.FIREBASE_TESTERS }}
          if [ -z "$TESTERS" ]; then
            echo "‚ö†Ô∏è FIREBASE_TESTERS secret not set. Using default group 'internal-testers'"
            firebase appdistribution:distribute ${{ env.APP_APK_PATH }} \
              --app 1:162093106925:android:088dfebbbdfb1d9de22ee4 \
              --release-notes "New build from GitHub Actions" \
              --groups "internal-testers"
          else
            echo "üìß Distributing to testers: $TESTERS"
            firebase appdistribution:distribute ${{ env.APP_APK_PATH }} \
              --app 1:162093106925:android:088dfebbbdfb1d9de22ee4 \
              --release-notes "New build from GitHub Actions" \
              --testers "$TESTERS"
          fi

      - name: Cleanup
        run: rm -f firebase.json
